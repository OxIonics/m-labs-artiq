[tool.poetry]
name = "artiq"
version = "7.0"
description = "Advanced Real-Time Infrastructure for Quantum physics"
authors = ["M-Labs"]
license = "GPL v3"
include = [
    "artiq/gui/logo*.svg",
    "versioneer.py",
    "artiq/_version.py",
    "artiq/coredevice/coredevice_generic.schema.json",
    "artiq/compiler/kernel.ld",
    "artiq/firmware",
    "artiq/examples",
]

[[tool.poetry.source]]
name = "oxionics"
url = "http://pypi.oxionics.com:3141/oiuser/oxionics/+simple/"
default = true

[tool.poetry.scripts]
artiq_client = "artiq.frontend.artiq_client:main"
artiq_compile = "artiq.frontend.artiq_compile:main"
artiq_coreanalyzer = "artiq.frontend.artiq_coreanalyzer:main"
artiq_coremgmt = "artiq.frontend.artiq_coremgmt:main"
artiq_ddb_template = "artiq.frontend.artiq_ddb_template:main"
artiq_master = "artiq.frontend.artiq_master:main"
artiq_mkfs = "artiq.frontend.artiq_mkfs:main"
artiq_rtiomon = "artiq.frontend.artiq_rtiomon:main"
artiq_sinara_tester = "artiq.frontend.artiq_sinara_tester:main"
artiq_session = "artiq.frontend.artiq_session:main"
artiq_route = "artiq.frontend.artiq_route:main"
artiq_run = "artiq.frontend.artiq_run:main"
artiq_flash = "artiq.frontend.artiq_flash:main"
aqctl_corelog = "artiq.frontend.aqctl_corelog:main"
artiq_browser = "artiq.frontend.artiq_browser:main"
artiq_dashboard = "artiq.frontend.artiq_dashboard:main"

[tool.poetry.dependencies]
python = "~3.8"
numpy = "^1.21.4"
scipy = "^1.7.3"
python-dateutil = "^2.8.2"
prettytable = "^2.4.0"
h5py = "^3.6.0"
qasync = "^0.22.0"
pyqtgraph = "^0.12.3"
pygit2 = "^1.7.1"
pythonparser = "^1.3"
python-levenshtein = "^0.12.2"
pyqt5 = "^5.15"
migen = "^0.9.2"
misoc = "^0.12"
jsonschema = "^4.2.1"
sipyco = "^1.2"
llvmlite = "^0.37.0"
pyqt5-qt5 = "^5.15.2"
pyqt5-sip = "^12.9.0"
paramiko = { version = "^2.9.2", optional = true }

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"
# number of commits since the root commit. 7579 is the number of commits before
# the 7.0 tag -- this brings us in line with artiq.
format-jinja = "{{ base.split('.')[0] }}.{{ distance + 7579 }}+g{{ commit }}"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
remote-flashing = ["paramiko"]
